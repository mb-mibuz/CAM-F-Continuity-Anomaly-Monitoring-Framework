\babel@toc {english}{}\relax 
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Examples of continuity rules monitored by script supervisors. Top row (left to right): prop continuity, eyeline continuity, time continuity. Bottom row (left to right): blocking for position, wardrobe continuity, 180-degree rule. Source:~\blx@tocontentsinit {0}\cite {vanityfair2023}}}{4}{figure.caption.9}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces Annotated script and notes on set of House Husbands~\blx@tocontentsinit {0}\cite {mskemosabi2013}}}{7}{figure.caption.11}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces CAM-F System Architecture showing monolithic backend with sandboxed detector plugins. Services communicate via direct method calls while detectors use JSON-RPC over stdin/stdout.}}{14}{figure.caption.12}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces Hierarchical storage structure mirroring film production workflow. Each level maps to production concepts with unique IDs preventing naming conflicts.}}{16}{figure.caption.13}%
\contentsline {figure}{\numberline {3.3}{\ignorespaces Communication flow between framework and sandboxed detectors. JSON-RPC messages contain frame paths rather than image data, reducing serialisation overhead whilst maintaining security through process isolation.}}{18}{figure.caption.14}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Database schema showing relationships between projects, scenes, angles, takes, frames and detection results. The hierarchical structure enables efficient queries while foreign key constraints maintain referential integrity.}}{23}{figure.caption.15}%
\contentsline {figure}{\numberline {4.2}{\ignorespaces ClockDetector processing pipeline. Input frame undergoes YOLOv11 localisation, followed by spatial transformation network (STN) for perspective normalisation, and finally ResNet50 classification to predict time as one of 720 discrete minute classes~\blx@tocontentsinit {0}\cite {yang2024}.}}{26}{figure.caption.16}%
\contentsline {figure}{\numberline {4.3}{\ignorespaces ClockDetector performance on challenging cases. Top row: Successful detections despite (a) partial occlusion, (b) extreme viewing angle, (c) motion blur. Bottom row: Failure cases due to (d) severe distortion, (e) ambiguous hand positions, (f) decorative clock design.}}{27}{figure.caption.17}%
\contentsline {figure}{\numberline {4.4}{\ignorespaces DifferenceDetector architecture based on co-attention networks. ResNet50 extracts multi-scale features, co-attention modules establish implicit correspondences, and CenterNet heads detect changes without explicit registration~\blx@tocontentsinit {0}\cite {sachdeva2023change}.}}{30}{figure.caption.18}%
\contentsline {figure}{\numberline {4.5}{\ignorespaces DifferenceDetector processing pipeline. (a) Reference and current frames. (b) Person segmentation masks (dilated for safety). (c) Co-attention difference map highlighting changes. (d) Final detections after filtering, showing moved prop (red box) while ignoring actor position changes.}}{30}{figure.caption.19}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Production-Aligned Frame Rate (PAFR) analysis showing the relationship between capture frame rate and backlog clearing time for both detectors. The intersection of each detector curve with the 300-second reset window (red dashed line) determines maximum sustainable frame rates: 4.0 fps for ClockDetector and 1.2 fps for DifferenceDetector. The shaded region indicates frame rates that would cause production delays by exceeding available reset time. System-wide performance is constrained by the slowest detector at 1.2 fps.}}{38}{figure.caption.23}%
\contentsline {figure}{\numberline {5.2}{\ignorespaces Integration test results from static scene. Wide-angle shot captured over 30 seconds at 1 fps, showing frame 30 with detection overlay.}}{39}{figure.caption.24}%
\contentsline {figure}{\numberline {5.3}{\ignorespaces Integration test results from dynamic scene with camera movement. 15-second sequence captured at 2 fps, showing frames 6 and 26. Detection performance remained consistent despite motion, though higher capture rate was required to detect transient errors.}}{39}{figure.caption.25}%
\contentsline {figure}{\numberline {5.4}{\ignorespaces CAM-F workflow interface showing real-time monitoring dashboard, detection results and generated PDF continuity report.}}{40}{figure.caption.26}%
\addvspace {10\p@ }
